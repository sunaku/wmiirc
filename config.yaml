script:
  after:
    - |
      action 'display_hdmi'
      for app in %w[ pidgin ario claws-mail liferea zim ]
        launch app unless system 'pgrep', '-f', app
      end

import:
  - status/*.yaml
  - status/music/mpd.yaml
  - control/*.yaml
  - control/action/*.yaml
  - display/*.yaml
  - display/color/zukitwo-dark.yaml
  - display/desktop/feh.yaml

display:
  bar: top
  font: 'xft:Sans-8'
  border: 1
  column:
    mode: default
    rule: |
      /gimp/ -> 17+83+41
      /chat/ -> 14+86
      /.*/ -> 50+50
  client:
    # make new windows of these clients open in the current view
    'group=0':
      - '^chromium:'
      - '^firefox:'
      - '^pcmanfm:'

    # make these clients open in the floating area
    'floating=on':
      - '^<nil>:<nil>:Event Tester$' # xev
      - '^x[a-z]+:' # x11
      - '^pinentry'
      - '^display:' # imagemagick
      - ':MPlayer:'
      - '^tkmidity:'
      - '^vncviewer:'
      - 'Thunar:File Operation Progress'
      - '^chromium:Chromium:Chromium Preferences$'
      - '^chromium:Chromium:Task Manager'
      - '^wicd-client.py:'
      - '^alsaplayer:'

    # make these clients open in the floating area AND appear in all views
    'tags=/./ floating=on':
      - '^wimenu:'
      - '^wmii9menu:'
      - '^xmessage:'
      - '^xwrits:'
      - '^xfce4-notifyd:'

    'tags=1 allow=+activate':
      - '^ario:'
      - '^sonata:'

    'tags=chat allow=+activate':
      - '^skype:'
      - '^Pidgin:'

    'tags=feed':
      - '^liferea:'

    'tags=gimp':
      - '^gimp'

    'tags=mail':
      - '^claws-mail:'

    'tags=note':
      - '^zim:'

    'tags=work floating=on':
      - '^rdesktop:'

  refresh: 30
  status:
    - notice:
        control:
          action:
            show_desktop: focus_view '...'
          mouse_action:
            right_click: show_desktop
            wheel_up: focus_view_next
            wheel_down: focus_view_previous
            wheel_click: status_refresh
    #- network:
        #params:
          #interface: tun0
    - arrange:
        params:
          default: landscape
          choices:
            landscape: |
              # tile the first two managed client side-by-side
              a = columns.first
              if a.exist? and a.length == 2 and a.next.floating?
                a.length = 1
              end

            right_stack: |
              tile_right
              columns.last.layout = :stack
    #- weather:
        #refresh: 300 # 5 minutes
        #params:
          #location: SJC
    - music:
    - volume:
        params:
          mixer: Master
    #- disk:
        #params:
          #path: $HOME
    #- thermal:
    - memory:
    - loadavg:
    #- battery:
    - pomodoro:
    - clock:
        params:
          format: '%l:%M%P %a %m/%d'

control:
  action:
    launch_terminal: launch 'urxvt'
    launch_browser:  launch 'chromium'
    launch_filer:    launch 'pcmanfm'
    launch_editor:   launch 'gvim'

    keyboard: | # re-register keyboard shortcuts under new keyboard layout
      Rumai.fs.keys.tap {|f| f.write f.read }

    keyboard_qwerty: |
      system 'setxkbmap us -option ""'
      action 'keyboard'
      system 'marble-mouse left'

    keyboard_dvorak: |
      system 'setxkbmap dvorak -option ""'
      action 'keyboard'

    display: |
      action 'desktop' # repaint desktop wallpaper
      launch! 'witray' # reposition systray on bar

    display_negative: | # invert screen colors
      launch! 'xcalib -invert -alter'

    display_portrait: | # rotate screen vertically
      system 'xrandr -o left && xrandr --dpi 96'

    display_landscape: | # rotate screen horizontally
      system 'xrandr -o normal && xrandr --dpi 96'

    display_lvds: | # undock laptop from my desk
      system 'xrandr --output LVDS --auto --output HDMI-0 --off --output VGA-0 --off --dpi 96'
      action 'display'
      action 'keyboard_dvorak'

    display_hdmi: | # dock laptop to my desk (HDMI)
      if system 'xrandr | fgrep -q "HDMI-0 connected"'
        system 'xrandr --output HDMI-0 --auto --output LVDS --off --dpi 96'
        system 'xset dpms force on' # wake up monitor from power saving mode
        action 'display'
        action 'keyboard_qwerty'
      end

    display_vga: | # display through a projector (VGA)
      if system 'xrandr | fgrep -q "VGA-0 connected"'
        system 'xrandr --output VGA-0 --auto --output LVDS --same-as VGA-0 --dpi 96'
        system 'xset dpms force on' # wake up monitor from power saving mode
        action 'display'
        action 'keyboard_dvorak'
      end

    system_hibernate: | # put laptop to sleep
      action 'music_pause'
      action 'volume_mute'
      action 'display_lvds'
      system 'xscreensaver-command -lock' # password protection
      system 'sudo pm-hibernate'
      action 'display_hdmi'

  mouse:
    grab: Mod1

  keyboard:
    up:      t
    down:    n
    left:    h
    right:   s
    root:    Mod1-
    send:    ${root}Shift-
    size:    ${root}Control-
    swap:    ${root}w,
    view:    ${root}v,
    group:   ${root}g,
    layout:  ${root}z,

  keyboard_action:
    XF86Display:              display_negative
    XF86Sleep:                system_hibernate

    ${root}x:                 launch_terminal
    ${root}k:                 launch_browser
    ${root}j:                 launch_filer
    ${root}q:                 launch_editor

    #-------------------------------------------------------------------------
    # basic
    #-------------------------------------------------------------------------

    ${root}i:                 action_menu
    ${root}e:                 launch_menu

    #-------------------------------------------------------------------------
    # client
    #-------------------------------------------------------------------------

    ${root}a:                 focus_client_menu
    ${root}Shift-a:           client_invite_menu
    ${root}c:                 client_fullscreen!

    ${root}${up}:             focus_client_up
    ${root}${down}:           focus_client_down
    ${root}${left}:           focus_client_left
    ${root}${right}:          focus_client_right
    ${size}comma:             focus_client_view_previous
    ${size}period:            focus_client_view_next

    ${size}${up}:             resize_client_up
    ${size}${down}:           resize_client_down
    ${size}${left}:           resize_client_left
    ${size}${right}:          resize_client_right
    ${size}Shift-${up}:       shrink_client_up
    ${size}Shift-${down}:     shrink_client_down
    ${size}Shift-${left}:     shrink_client_left
    ${size}Shift-${right}:    shrink_client_right

    ${send}${up}:             send_group_up
    ${send}${down}:           send_group_down
    ${send}${left}:           send_group_left
    ${send}${right}:          send_group_right

    ${send}v:                 send_group_view_menu
    ${send}space:             send_group_overlay!
    ${send}Delete:            group_kill

    ${send}1:                 send_group_view_1
    ${send}2:                 send_group_view_2
    ${send}3:                 send_group_view_3
    ${send}4:                 send_group_view_4
    ${send}5:                 send_group_view_5
    ${send}6:                 send_group_view_6
    ${send}7:                 send_group_view_7
    ${send}8:                 send_group_view_8
    ${send}9:                 send_group_view_9
    ${send}0:                 send_group_view_0

    ${swap}${up}:             swap_client_up
    ${swap}${down}:           swap_client_down
    ${swap}${left}:           swap_client_left
    ${swap}${right}:          swap_client_right
    ${root}Return:            swap_client_master

    ${swap}1:                 swap_client_column_1
    ${swap}2:                 swap_client_column_2
    ${swap}3:                 swap_client_column_3
    ${swap}4:                 swap_client_column_4
    ${swap}5:                 swap_client_column_5
    ${swap}6:                 swap_client_column_6
    ${swap}7:                 swap_client_column_7
    ${swap}8:                 swap_client_column_8
    ${swap}9:                 swap_client_column_9
    ${swap}0:                 swap_client_column_0

    #-------------------------------------------------------------------------
    # area
    #-------------------------------------------------------------------------

    ${root}space:             focus_overlay!

    #-------------------------------------------------------------------------
    # view
    #-------------------------------------------------------------------------

    ${root}comma:             focus_view_previous
    ${root}period:            focus_view_next
    ${root}o:                 focus_view_recent
    ${root}u:                 focus_view_menu

    ${root}1:                 focus_view_1
    ${root}2:                 focus_view_2
    ${root}3:                 focus_view_3
    ${root}4:                 focus_view_4
    ${root}5:                 focus_view_5
    ${root}6:                 focus_view_6
    ${root}7:                 focus_view_7
    ${root}8:                 focus_view_8
    ${root}9:                 focus_view_9
    ${root}0:                 focus_view_0

    ${view}a:                 focus_view_a
    ${view}b:                 focus_view_b
    ${view}c:                 focus_view_c
    ${view}d:                 focus_view_d
    ${view}e:                 focus_view_e
    ${view}f:                 focus_view_f
    ${view}g:                 focus_view_g
    ${view}h:                 focus_view_h
    ${view}i:                 focus_view_i
    ${view}j:                 focus_view_j
    ${view}k:                 focus_view_k
    ${view}l:                 focus_view_l
    ${view}m:                 focus_view_m
    ${view}n:                 focus_view_n
    ${view}o:                 focus_view_o
    ${view}p:                 focus_view_p
    ${view}q:                 focus_view_q
    ${view}r:                 focus_view_r
    ${view}s:                 focus_view_s
    ${view}t:                 focus_view_t
    ${view}u:                 focus_view_u
    ${view}v:                 focus_view_v
    ${view}w:                 focus_view_w
    ${view}x:                 focus_view_x
    ${view}y:                 focus_view_y
    ${view}z:                 focus_view_z

    #-------------------------------------------------------------------------
    # layout
    #-------------------------------------------------------------------------

    ${layout}w:               layout_column_equal
    ${layout}v:               layout_column_stack
    ${layout}m:               layout_column_max

    ${layout}Shift-w:         layout_view_equal
    ${layout}Shift-v:         layout_view_stack
    ${layout}Shift-m:         layout_view_max

    ${layout}r:               arrange_right
    ${layout}Control-r:       arrange_right_persist
    ${layout}Shift-r:         arrange_rightward
    ${layout}Control-Shift-r: arrange_rightward_persist
    ${layout}l:               arrange_left
    ${layout}Control-l:       arrange_left_persist
    ${layout}Shift-l:         arrange_leftward
    ${layout}Control-Shift-l: arrange_leftward_persist
    ${layout}i:               arrange_inward
    ${layout}Control-i:       arrange_inward_persist
    ${layout}o:               arrange_outward
    ${layout}Control-o:       arrange_outward_persist
    ${layout}g:               arrange_grid
    ${layout}Control-g:       arrange_grid_persist
    ${layout}s:               arrange_stack
    ${layout}Control-s:       arrange_stack_persist
    ${layout}j:               arrange_join
    ${layout}Control-j:       arrange_join_persist
    ${layout}Shift-j:         arrange_split
    ${layout}Control-Shift-j: arrange_split_persist
    ${layout}z:               arrange_persist_redo
    ${layout}Control-z:       arrange_persist_stop
    ${layout}Shift-z:         arrange_persist_menu

    #-------------------------------------------------------------------------
    # group
    #-------------------------------------------------------------------------

    ${group}g:                group_client!
    ${group}a:                group_area!
    ${group}c:                group_columns!
    ${group}o:                group_overlay!
    ${group}v:                group_view!
    ${group}w:                group_all!
    ${group}n:                ungroup_all

    ${size}2:                 zoom_group
    ${size}1:                 unzoom_group

    ${size}0:                 detach_group
    ${size}9:                 attach_client

    #-------------------------------------------------------------------------
    # volume
    #-------------------------------------------------------------------------

    XF86AudioRaiseVolume:     volume_more
    XF86AudioLowerVolume:     volume_less
    XF86AudioMute:            volume_mute!

    ${send}Prior:             volume_more
    ${send}Next:              volume_less
    ${send}Return:            volume_mute!

    #-------------------------------------------------------------------------
    # music
    #-------------------------------------------------------------------------

    XF86AudioPlay:            music_play!
    XF86AudioPrev:            music_previous
    XF86AudioNext:            music_next
    XF86AudioStop:            music_stop

    ${size}Prior:             music_previous
    ${size}Next:              music_next
    ${size}Return:            music_play!
    ${size}Home:              music_playlist_menu
    ${size}End:               music_favorite_menu
