status:
  battery:
    params:
      device: BAT0
      low: 15
      sleep_level:
      sleep_command:

    script: |
      def device_uevent_file
        "/sys/class/power_supply/#{@device}/uevent"
      end

      def device_uevent_blob
        File.read device_uevent_file
      end

      def device_uevent_data
        Hash[
          device_uevent_blob.split(/[=\s]+/).each_slice(2).map do |key, value|
            [key.sub(/^POWER_SUPPLY_/, '').downcase.to_sym, value]
          end
        ]
      end

    label: |
      data = device_uevent_data
      level = data[:capacity].to_i
      icon =
        case data[:status]
        when 'Charging' then "\u25B4"
        when 'Full' then "\u26A1"
        else
          system @sleep_command if level <= @sleep_level and @sleep_command
          "\u25BE"
        end
      color =
        case data[:capacity_level]
        when 'Critical' then :error
        else :notice if level <= @low
        end

      [color, "\u26A1", level, icon]

    control:
      action:
        battery_details: dialog device_uevent_blob

      mouse_action:
        left_click: battery_details
