status:
  pomodoro:
    refresh: 60

    script: |
      POMODOROS_PER_SESSION = 4
      MINUTES_PER_BREAK = 5
      MINUTES_PER_POMODORO = 25
      SECONDS_PER_MINUTE = 60
      SECONDS_PER_POMODORO = MINUTES_PER_POMODORO * SECONDS_PER_MINUTE
      @pomodoros ||= 0

      def start
        completed = Time.now >= @deadline if @deadline

        if not @started or completed
          @deadline = Time.now + SECONDS_PER_POMODORO
          @started = true
          @paused = false
          @pomodoros += 1 if completed

        elsif @paused
          @deadline = Time.now + @paused
          @paused = false

        else
          @paused = @deadline - Time.now
        end

        refresh
      end

      def pause
        start unless @started
        start
      end

      def stop
        @started = false
        @paused = false
        refresh
      end

      def reset
        @pomodoros = 0
        refresh
      end

      def seconds_to_minutes seconds
        (seconds.to_f / SECONDS_PER_MINUTE).round
      end

      def tell_user_to_take_break
        message =
          if (@pomodoros + 1) % POMODOROS_PER_SESSION == 0
            'Take a longer (10-20 minutes) break!'
          else
            'Take a short (5 minutes) break!'
          end

        notify 'Pomodoro Technique', message
      end

    label: |
      # remind the user that they are using their computer without having
      # activated the pomodoro timer; we must think of their health! >:-O
      color = :error

      if @paused
        color = :notice
        minutes_remaining = seconds_to_minutes(@paused)

      elsif @started
        minutes_remaining = seconds_to_minutes(@deadline - Time.now)

        if minutes_remaining > 0
          color = :normal
        elsif minutes_remaining > -MINUTES_PER_BREAK
          color = :success
        end

        tell_user_to_take_break if minutes_remaining <= 0 and
          minutes_remaining % MINUTES_PER_BREAK == 0
      end

      [color, "\u2692",
        ("#{minutes_remaining}m" if minutes_remaining),
        ("x#{@pomodoros}" if @started),
      ]

    control:
      action:
        pomodoro_start: self.start
        pomodoro_pause: self.pause
        pomodoro_stop: self.stop
        pomodoro_reset: self.reset

      mouse_action:
        left_click: pomodoro_start
        right_click: pomodoro_stop
        wheel_click: pomodoro_reset
