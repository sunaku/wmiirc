import:
  - display/status

display:
  status:
    load:
      refresh: 10

      @critical: 1.5
      @high: 0.75

      script: |
        case ::Config::CONFIG['host_os']
        when /linux/

          def sample!
            @load_averages = File.read('/proc/loadavg').split.first(3)
            @current_load = @load_averages[0].to_f
          end

        when /bsd/

          def sample!
            @load_averages = `sysctl -h -n vm.loadavg`.split
            @current_load = @load_averages[1].to_f
          end

        else
          raise NotImplementedError, 'OS not supported'
        end

      label: |
        sample!

        color = case
                when @current_load > @critical then 'error'
                when @current_load > @high     then 'notice'
                end

        [color, "\u2691", *@load_averages]

      control:
        action:
          show_loadavg_stats: |
            dialog `ps ux --sort=-pcpu,-vsz || ps ux`

        mouse_action:
          left_click: show_loadavg_stats
