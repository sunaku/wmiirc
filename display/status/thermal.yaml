import:
  - display/status

display:
  status:
    thermal:
      refresh: 30

      @critical: 65
      @high: 45

      script: |
        case ::Config::CONFIG['host_os']
        when /linux/

          def sample!
            reading = File.read('/proc/acpi/thermal_zone/THRM/temperature')
            @temp, @unit = reading.split.last(2)
          end

          def show_info
            dialog `acpi -V`
          end

        when /bsd/

          def sample!
            reading = `sysctl hw.acpi.thermal.tz0.temperature`
            @temp = [/.*:\s*(\d+\,\d+)/, 1].to_f
            @unit = 'C'
          end

          def show_info
            dialog `sysctl hw.acpi.thermal`
          end

        else
          raise NotImplementedError, 'OS not supported'
        end

      label: |
        sample!

        color = case
                when @temp > @critical then 'error'
                when @temp > @high     then 'notice'
                end

        [color, @temp, @unit]

      control:
        action:
          show_thermal_info: self.show_info

        mouse_action:
          left_click: show_thermal_info
