import:
  - display/status

display:
  status:
    volume:
      refresh: 30

      @mixer:

      script: |
        case ::Config::CONFIG['host_os']
        when /linux/

          @mixer ||= 'Master'

          def reading
            `amixer get #{@mixer}`
          end

          def level
            reading[/\d+%/]
          end

          def level= value
            system "amixer set #{@mixer} #{value}"
            refresh
          end

          def increase
            self.level = '5%+'
          end

          def decrease
            self.level = '5%-'
          end

          def mute!
            self.level = 'toggle'
          end

        when /bsd/

          @mixer ||= 'mixer'

          def reading
            `mixer #{@mixer}`
          end

          def level
            reading.split.last.first.split(':').first
          end

          def level= value
            system "mixer #{@mixer} #{value}"
            refresh
          end

          def increase
            self.level = '+3'
          end

          def decrease
            self.level = '-3'
          end

          def mute!
            self.level = 'toggle'
          end

        else
          raise NotImplementedError, 'OS not supported'
        end

        def mute?
          reading.include? '[off]'
        end

        def menu
          current = self.level
          levels = (0 .. 10).map {|i| i * 10 }.
                   push(current.to_i).sort.uniq.
                   map {|i| "#{i}%" }.reverse

          if choice = click_menu(levels, current)
            self.level = choice
          end
        end

      label: |
        color = 'notice' if mute?
        [color, "\u266A", level]

      control:
        action:
          set_volume_from_menu: self.menu
          increase_volume: self.increase
          decrease_volume: self.decrease
          mute_volume_toggle: self.mute!

        keyboard_action:
          XF86AudioRaiseVolume: increase_volume
          XF86AudioLowerVolume: decrease_volume
          XF86AudioMute: mute_volume_toggle
          ${mod}-Shift-Prior: increase_volume
          ${mod}-Shift-Next: decrease_volume
          ${mod}-Shift-Return: mute_volume_toggle

        mouse_action:
          left_click: set_volume_from_menu
          right_click: mute_volume_toggle
          wheel_up: increase_volume
          wheel_down: decrease_volume
